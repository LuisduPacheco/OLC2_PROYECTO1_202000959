
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftBYDIVISIONleftGREATERLESSleftGREATER_ELESS_EleftANDleftORleftADD_ASSIGNSUB_ASSIGNADD_ASSIGN AND BOOLEAN BREAK BY CHAR COLON COMMA CONSOLE CONST CONTINUE DECIMAL DIF DIVISION DOT ELSE EQEQUAL EQUAL FLOAT FUNC GREATER GREATER_E ID IF INT INTERFACE LESS LESS_E LOG L_BRACKET L_KEY L_PAR MINUS MODULO NEGATE NUMBER OR PLUS RETURN R_BRACKET R_KEY R_PAR SEMICOLON STRING SUB_ASSIGN VAR WHILEs : blockblock : block instruction\n            | instructioninstruction : print\n                | if_instruction\n                | while_instruction\n                | declaration\n                | array_declaration\n                | assignment\n                | break_statement\n                | continue_statement\n                | functions_statement\n                | call\n                | return_statement\n                | interface_creation\n                | interface_declaration\n                print : CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLONif_instruction : IF L_PAR expression R_PAR L_KEY block R_KEYwhile_instruction : WHILE L_PAR expression R_PAR L_KEY block R_KEY declaration : VAR ID COLON type EQUAL expression SEMICOLON\n                    | VAR ID EQUAL expression SEMICOLON\n                    declaration : VAR ID COLON type SEMICOLONarray_declaration : VAR ID COLON type L_BRACKET R_BRACKET EQUAL expression SEMICOLONdeclaration : CONST ID COLON type EQUAL expression SEMICOLON\n                    | CONST ID EQUAL expression SEMICOLON\n                    interface_declaration : VAR ID COLON ID EQUAL L_KEY interface_content R_KEY SEMICOLONinterface_content : interface_content COMMA ID COLON expression\n                        | ID COLON expressionassignment : ID EQUAL expression SEMICOLON\n                | ID ADD_ASSIGN expression SEMICOLON\n                | ID SUB_ASSIGN expression SEMICOLONreturn_statement : RETURN expression SEMICOLON\n                        | RETURN SEMICOLONcall : ID L_PAR expressionList R_PAR SEMICOLON\n            | ID L_PAR R_PAR SEMICOLONfunctions_statement : FUNC ID func_params func_type L_KEY block R_KEYfunc_params : L_PAR params_list R_PAR\n                    | L_PAR R_PARinterface_creation : INTERFACE ID L_KEY attribute_list R_KEY SEMICOLONattribute_list : attribute_list ID COLON type SEMICOLON\n                    | ID COLON type SEMICOLONparams_list : params_list COMMA ID COLON type\n                | ID COLON typefunc_type : COLON type\n                | break_statement : BREAK SEMICOLONcontinue_statement : CONTINUE SEMICOLONtype : NUMBER\n            | FLOAT\n            | STRING\n            | BOOLEAN\n            | CHARexpressionList : expressionList COMMA expression\n                    | expressionexpression : expression PLUS expressionexpression : expression MINUS expressionexpression : expression BY expressionexpression : expression DIVISION expressionexpression : expression MODULO expressionexpression : expression EQEQUAL expressionexpression : expression DIF expressionexpression : expression GREATER expressionexpression : expression GREATER_E expressionexpression : expression LESS expressionexpression : expression LESS_E expressionexpression : expression AND expressionexpression : expression OR expressionexpression : NEGATE expressionexpression : L_PAR expression R_PARexpression : NUMBER\n                | STRING\n                | FLOAT\n                | CHAR\n                | BOOLEAN\n                | listArrayexpression : L_BRACKET expressionList R_BRACKETlistArray : listArray L_BRACKET expression R_BRACKET\n                | listArray DOT ID\n                | ID'
    
_lr_action_items = {'CONSOLE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[17,17,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,17,17,-22,-21,-34,-25,17,17,17,17,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'IF':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[18,18,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,18,18,-22,-21,-34,-25,18,18,18,18,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'WHILE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[19,19,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,19,19,-22,-21,-34,-25,19,19,19,19,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'VAR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[20,20,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,20,20,-22,-21,-34,-25,20,20,20,20,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'CONST':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[22,22,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,22,22,-22,-21,-34,-25,22,22,22,22,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,20,22,25,26,27,28,30,31,33,34,35,36,38,39,42,43,44,51,57,58,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,88,89,100,101,102,104,105,131,133,134,136,137,139,140,142,143,144,147,154,155,156,160,165,166,167,168,171,172,173,174,176,178,180,183,185,187,188,],[21,21,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,32,37,40,52,53,-2,52,52,52,52,52,52,-46,-47,-33,52,52,52,92,52,52,112,-32,52,52,52,52,52,52,52,52,52,52,52,52,52,52,128,130,52,-29,-30,-31,52,-35,151,21,21,52,-22,-21,-34,52,-25,21,161,21,21,169,21,-39,-17,-18,-19,-20,52,-24,-36,-41,52,186,-40,-26,-23,52,]),'BREAK':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[23,23,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,23,23,-22,-21,-34,-25,23,23,23,23,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'CONTINUE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[24,24,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,24,24,-22,-21,-34,-25,24,24,24,24,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'FUNC':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[25,25,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,25,25,-22,-21,-34,-25,25,25,25,25,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'RETURN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[26,26,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,26,26,-22,-21,-34,-25,26,26,26,26,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'INTERFACE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,133,134,137,139,140,143,144,154,155,160,165,166,167,168,171,173,174,185,187,],[27,27,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,27,27,-22,-21,-34,-25,27,27,27,27,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,69,100,101,102,105,137,139,140,143,165,166,167,168,171,173,174,185,187,],[0,-1,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-32,-29,-30,-31,-35,-22,-21,-34,-25,-39,-17,-18,-19,-20,-24,-36,-26,-23,]),'R_KEY':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,28,38,39,42,45,46,47,48,49,50,52,69,83,100,101,102,105,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,131,137,139,140,143,149,154,155,160,165,166,167,168,170,171,173,174,176,183,184,185,187,189,],[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-46,-47,-33,-70,-71,-72,-73,-74,-75,-79,-32,-68,-29,-30,-31,-35,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-78,-76,152,-22,-21,-34,-25,-77,167,168,174,-39,-17,-18,-19,179,-20,-24,-36,-41,-40,-28,-26,-23,-27,]),'DOT':([17,50,52,128,149,],[29,86,-79,-78,-77,]),'L_PAR':([18,19,21,26,30,31,33,34,35,36,40,43,44,51,54,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,136,142,172,178,188,],[30,31,36,44,44,44,44,44,44,44,68,44,44,44,89,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'EQUAL':([21,32,37,92,93,94,95,96,97,98,106,158,],[33,58,66,135,136,-48,-49,-50,-51,-52,142,172,]),'ADD_ASSIGN':([21,],[34,]),'SUB_ASSIGN':([21,],[35,]),'SEMICOLON':([23,24,26,41,45,46,47,48,49,50,52,59,60,61,63,83,93,94,95,96,97,98,99,103,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,149,152,153,157,159,163,177,179,181,],[38,39,42,69,-70,-71,-72,-73,-74,-75,-79,100,101,102,105,-68,137,-48,-49,-50,-51,-52,139,140,143,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-78,-76,-77,165,166,171,173,176,183,185,187,]),'NEGATE':([26,30,31,33,34,35,36,43,44,51,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,136,142,172,178,188,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'NUMBER':([26,30,31,33,34,35,36,43,44,51,57,58,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,109,136,142,148,150,164,172,175,178,188,],[45,45,45,45,45,45,45,45,45,45,94,45,94,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,94,45,45,94,94,94,45,94,45,45,]),'STRING':([26,30,31,33,34,35,36,43,44,51,57,58,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,109,136,142,148,150,164,172,175,178,188,],[46,46,46,46,46,46,46,46,46,46,96,46,96,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,96,46,46,96,96,96,46,96,46,46,]),'FLOAT':([26,30,31,33,34,35,36,43,44,51,57,58,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,109,136,142,148,150,164,172,175,178,188,],[47,47,47,47,47,47,47,47,47,47,95,47,95,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,95,47,47,95,95,95,47,95,47,47,]),'CHAR':([26,30,31,33,34,35,36,43,44,51,57,58,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,109,136,142,148,150,164,172,175,178,188,],[48,48,48,48,48,48,48,48,48,48,98,48,98,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,98,48,48,98,98,98,48,98,48,48,]),'BOOLEAN':([26,30,31,33,34,35,36,43,44,51,57,58,65,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,109,136,142,148,150,164,172,175,178,188,],[49,49,49,49,49,49,49,49,49,49,97,49,97,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,97,49,49,97,97,97,49,97,49,49,]),'L_BRACKET':([26,30,31,33,34,35,36,43,44,50,51,52,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,93,94,95,96,97,98,104,128,136,142,149,172,178,188,],[51,51,51,51,51,51,51,51,51,85,51,-79,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,138,-48,-49,-50,-51,-52,51,-78,51,51,-77,51,51,51,]),'LOG':([29,],[54,]),'COLON':([32,37,67,111,112,130,146,151,161,169,186,],[57,65,109,-38,148,150,-37,164,175,178,188,]),'R_PAR':([36,45,46,47,48,49,50,52,55,56,62,64,68,83,84,94,95,96,97,98,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,132,141,149,162,182,],[63,-70,-71,-72,-73,-74,-75,-79,90,91,103,-54,111,-68,126,-48,-49,-50,-51,-52,146,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-78,-76,153,-53,-77,-43,-42,]),'PLUS':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[70,-70,-71,-72,-73,-74,-75,-79,70,70,70,70,70,70,70,70,70,70,-55,-56,-57,-58,70,70,70,-62,-63,-64,-65,-66,-67,-69,70,-78,-76,70,-77,70,70,70,70,70,]),'MINUS':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[71,-70,-71,-72,-73,-74,-75,-79,71,71,71,71,71,71,71,71,71,71,-55,-56,-57,-58,71,71,71,-62,-63,-64,-65,-66,-67,-69,71,-78,-76,71,-77,71,71,71,71,71,]),'BY':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[72,-70,-71,-72,-73,-74,-75,-79,72,72,72,72,72,72,72,72,72,72,72,72,-57,-58,72,72,72,-62,-63,-64,-65,-66,-67,-69,72,-78,-76,72,-77,72,72,72,72,72,]),'DIVISION':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[73,-70,-71,-72,-73,-74,-75,-79,73,73,73,73,73,73,73,73,73,73,73,73,-57,-58,73,73,73,-62,-63,-64,-65,-66,-67,-69,73,-78,-76,73,-77,73,73,73,73,73,]),'MODULO':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[74,-70,-71,-72,-73,-74,-75,-79,74,74,74,74,74,74,74,74,74,74,-55,-56,-57,-58,74,74,74,-62,-63,-64,-65,-66,-67,-69,74,-78,-76,74,-77,74,74,74,74,74,]),'EQEQUAL':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[75,-70,-71,-72,-73,-74,-75,-79,75,75,75,75,75,75,75,75,75,75,-55,-56,-57,-58,75,75,75,-62,-63,-64,-65,-66,-67,-69,75,-78,-76,75,-77,75,75,75,75,75,]),'DIF':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[76,-70,-71,-72,-73,-74,-75,-79,76,76,76,76,76,76,76,76,76,76,-55,-56,-57,-58,76,76,76,-62,-63,-64,-65,-66,-67,-69,76,-78,-76,76,-77,76,76,76,76,76,]),'GREATER':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[77,-70,-71,-72,-73,-74,-75,-79,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-62,-63,-64,-65,-66,-67,-69,77,-78,-76,77,-77,77,77,77,77,77,]),'GREATER_E':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[78,-70,-71,-72,-73,-74,-75,-79,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,-63,78,-65,-66,-67,-69,78,-78,-76,78,-77,78,78,78,78,78,]),'LESS':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[79,-70,-71,-72,-73,-74,-75,-79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-62,-63,-64,-65,-66,-67,-69,79,-78,-76,79,-77,79,79,79,79,79,]),'LESS_E':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[80,-70,-71,-72,-73,-74,-75,-79,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,-63,80,-65,-66,-67,-69,80,-78,-76,80,-77,80,80,80,80,80,]),'AND':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[81,-70,-71,-72,-73,-74,-75,-79,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,-66,-67,-69,81,-78,-76,81,-77,81,81,81,81,81,]),'OR':([41,45,46,47,48,49,50,52,55,56,59,60,61,64,83,84,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,141,149,157,159,181,184,189,],[82,-70,-71,-72,-73,-74,-75,-79,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,-67,-69,82,-78,-76,82,-77,82,82,82,82,82,]),'COMMA':([45,46,47,48,49,50,52,62,64,83,87,94,95,96,97,98,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,132,141,149,162,170,182,184,189,],[-70,-71,-72,-73,-74,-75,-79,104,-54,-68,104,-48,-49,-50,-51,-52,147,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,-78,-76,104,-53,-77,-43,180,-42,-28,-27,]),'R_BRACKET':([45,46,47,48,49,50,52,64,83,87,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,138,141,149,],[-70,-71,-72,-73,-74,-75,-79,-54,-68,129,-55,-56,-57,-58,-59,-60,-61,-62,-63,-64,-65,-66,-67,-69,149,-78,-76,158,-53,-77,]),'L_KEY':([53,67,90,91,94,95,96,97,98,108,111,135,145,146,],[88,-45,133,134,-48,-49,-50,-51,-52,144,-38,156,-44,-37,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'s':([0,],[1,]),'block':([0,133,134,144,],[2,154,155,160,]),'instruction':([0,2,133,134,144,154,155,160,],[3,28,3,3,3,28,28,28,]),'print':([0,2,133,134,144,154,155,160,],[4,4,4,4,4,4,4,4,]),'if_instruction':([0,2,133,134,144,154,155,160,],[5,5,5,5,5,5,5,5,]),'while_instruction':([0,2,133,134,144,154,155,160,],[6,6,6,6,6,6,6,6,]),'declaration':([0,2,133,134,144,154,155,160,],[7,7,7,7,7,7,7,7,]),'array_declaration':([0,2,133,134,144,154,155,160,],[8,8,8,8,8,8,8,8,]),'assignment':([0,2,133,134,144,154,155,160,],[9,9,9,9,9,9,9,9,]),'break_statement':([0,2,133,134,144,154,155,160,],[10,10,10,10,10,10,10,10,]),'continue_statement':([0,2,133,134,144,154,155,160,],[11,11,11,11,11,11,11,11,]),'functions_statement':([0,2,133,134,144,154,155,160,],[12,12,12,12,12,12,12,12,]),'call':([0,2,133,134,144,154,155,160,],[13,13,13,13,13,13,13,13,]),'return_statement':([0,2,133,134,144,154,155,160,],[14,14,14,14,14,14,14,14,]),'interface_creation':([0,2,133,134,144,154,155,160,],[15,15,15,15,15,15,15,15,]),'interface_declaration':([0,2,133,134,144,154,155,160,],[16,16,16,16,16,16,16,16,]),'expression':([26,30,31,33,34,35,36,43,44,51,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,136,142,172,178,188,],[41,55,56,59,60,61,64,83,84,64,99,107,113,114,115,116,117,118,119,120,121,122,123,124,125,127,64,141,157,159,181,184,189,]),'listArray':([26,30,31,33,34,35,36,43,44,51,58,66,70,71,72,73,74,75,76,77,78,79,80,81,82,85,89,104,136,142,172,178,188,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'expressionList':([36,51,89,],[62,87,132,]),'func_params':([40,],[67,]),'type':([57,65,109,148,150,164,175,],[93,106,145,162,163,177,182,]),'func_type':([67,],[108,]),'params_list':([68,],[110,]),'attribute_list':([88,],[131,]),'interface_content':([156,],[170,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> s","S'",1,None,None,None),
  ('s -> block','s',1,'p_start','parser.py',229),
  ('block -> block instruction','block',2,'p_instruction_block','parser.py',234),
  ('block -> instruction','block',1,'p_instruction_block','parser.py',235),
  ('instruction -> print','instruction',1,'p_instruction_list','parser.py',244),
  ('instruction -> if_instruction','instruction',1,'p_instruction_list','parser.py',245),
  ('instruction -> while_instruction','instruction',1,'p_instruction_list','parser.py',246),
  ('instruction -> declaration','instruction',1,'p_instruction_list','parser.py',247),
  ('instruction -> array_declaration','instruction',1,'p_instruction_list','parser.py',248),
  ('instruction -> assignment','instruction',1,'p_instruction_list','parser.py',249),
  ('instruction -> break_statement','instruction',1,'p_instruction_list','parser.py',250),
  ('instruction -> continue_statement','instruction',1,'p_instruction_list','parser.py',251),
  ('instruction -> functions_statement','instruction',1,'p_instruction_list','parser.py',252),
  ('instruction -> call','instruction',1,'p_instruction_list','parser.py',253),
  ('instruction -> return_statement','instruction',1,'p_instruction_list','parser.py',254),
  ('instruction -> interface_creation','instruction',1,'p_instruction_list','parser.py',255),
  ('instruction -> interface_declaration','instruction',1,'p_instruction_list','parser.py',256),
  ('print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON','print',7,'p_instruction_console','parser.py',262),
  ('if_instruction -> IF L_PAR expression R_PAR L_KEY block R_KEY','if_instruction',7,'p_instruction_if','parser.py',268),
  ('while_instruction -> WHILE L_PAR expression R_PAR L_KEY block R_KEY','while_instruction',7,'p_instruction_while','parser.py',275),
  ('declaration -> VAR ID COLON type EQUAL expression SEMICOLON','declaration',7,'p_instruction_declaration','parser.py',281),
  ('declaration -> VAR ID EQUAL expression SEMICOLON','declaration',5,'p_instruction_declaration','parser.py',282),
  ('declaration -> VAR ID COLON type SEMICOLON','declaration',5,'p_instruction_declaration_type','parser.py',293),
  ('array_declaration -> VAR ID COLON type L_BRACKET R_BRACKET EQUAL expression SEMICOLON','array_declaration',9,'p_instruction_array_declaration','parser.py',299),
  ('declaration -> CONST ID COLON type EQUAL expression SEMICOLON','declaration',7,'p_instruction_declare_constants','parser.py',305),
  ('declaration -> CONST ID EQUAL expression SEMICOLON','declaration',5,'p_instruction_declare_constants','parser.py',306),
  ('interface_declaration -> VAR ID COLON ID EQUAL L_KEY interface_content R_KEY SEMICOLON','interface_declaration',9,'p_instruction_interface_declaration','parser.py',317),
  ('interface_content -> interface_content COMMA ID COLON expression','interface_content',5,'p_instruction_interface_content','parser.py',323),
  ('interface_content -> ID COLON expression','interface_content',3,'p_instruction_interface_content','parser.py',324),
  ('assignment -> ID EQUAL expression SEMICOLON','assignment',4,'p_instruction_assignment','parser.py',336),
  ('assignment -> ID ADD_ASSIGN expression SEMICOLON','assignment',4,'p_instruction_assignment','parser.py',337),
  ('assignment -> ID SUB_ASSIGN expression SEMICOLON','assignment',4,'p_instruction_assignment','parser.py',338),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_instruction_return','parser.py',349),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_instruction_return','parser.py',350),
  ('call -> ID L_PAR expressionList R_PAR SEMICOLON','call',5,'p_instruction_call_function','parser.py',359),
  ('call -> ID L_PAR R_PAR SEMICOLON','call',4,'p_instruction_call_function','parser.py',360),
  ('functions_statement -> FUNC ID func_params func_type L_KEY block R_KEY','functions_statement',7,'p_instruction_function','parser.py',369),
  ('func_params -> L_PAR params_list R_PAR','func_params',3,'p_instruction_function_params_list','parser.py',375),
  ('func_params -> L_PAR R_PAR','func_params',2,'p_instruction_function_params_list','parser.py',376),
  ('interface_creation -> INTERFACE ID L_KEY attribute_list R_KEY SEMICOLON','interface_creation',6,'p_instruction_interface_creation','parser.py',384),
  ('attribute_list -> attribute_list ID COLON type SEMICOLON','attribute_list',5,'p_instruction_interface_attribute','parser.py',390),
  ('attribute_list -> ID COLON type SEMICOLON','attribute_list',4,'p_instruction_interface_attribute','parser.py',391),
  ('params_list -> params_list COMMA ID COLON type','params_list',5,'p_expression_param_list','parser.py',403),
  ('params_list -> ID COLON type','params_list',3,'p_expression_param_list','parser.py',404),
  ('func_type -> COLON type','func_type',2,'p_instruction_function_type','parser.py',416),
  ('func_type -> <empty>','func_type',0,'p_instruction_function_type','parser.py',417),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_instruction_break','parser.py',425),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_instruction_continue','parser.py',431),
  ('type -> NUMBER','type',1,'p_type_production','parser.py',437),
  ('type -> FLOAT','type',1,'p_type_production','parser.py',438),
  ('type -> STRING','type',1,'p_type_production','parser.py',439),
  ('type -> BOOLEAN','type',1,'p_type_production','parser.py',440),
  ('type -> CHAR','type',1,'p_type_production','parser.py',441),
  ('expressionList -> expressionList COMMA expression','expressionList',3,'p_expression_list','parser.py',459),
  ('expressionList -> expression','expressionList',1,'p_expression_list','parser.py',460),
  ('expression -> expression PLUS expression','expression',3,'p_expression_add','parser.py',470),
  ('expression -> expression MINUS expression','expression',3,'p_expression_sub','parser.py',476),
  ('expression -> expression BY expression','expression',3,'p_expression_mult','parser.py',482),
  ('expression -> expression DIVISION expression','expression',3,'p_expression_div','parser.py',488),
  ('expression -> expression MODULO expression','expression',3,'p_expression_mod','parser.py',494),
  ('expression -> expression EQEQUAL expression','expression',3,'p_expression_equal','parser.py',500),
  ('expression -> expression DIF expression','expression',3,'p_expression_different','parser.py',506),
  ('expression -> expression GREATER expression','expression',3,'p_expression_greater','parser.py',512),
  ('expression -> expression GREATER_E expression','expression',3,'p_expression_greater_equal','parser.py',518),
  ('expression -> expression LESS expression','expression',3,'p_expression_less','parser.py',524),
  ('expression -> expression LESS_E expression','expression',3,'p_expression_less_equal','parser.py',530),
  ('expression -> expression AND expression','expression',3,'p_expression_and','parser.py',536),
  ('expression -> expression OR expression','expression',3,'p_expression_or','parser.py',542),
  ('expression -> NEGATE expression','expression',2,'p_expression_negate','parser.py',548),
  ('expression -> L_PAR expression R_PAR','expression',3,'p_expression_group','parser.py',554),
  ('expression -> NUMBER','expression',1,'p_expression_primitive','parser.py',559),
  ('expression -> STRING','expression',1,'p_expression_primitive','parser.py',560),
  ('expression -> FLOAT','expression',1,'p_expression_primitive','parser.py',561),
  ('expression -> CHAR','expression',1,'p_expression_primitive','parser.py',562),
  ('expression -> BOOLEAN','expression',1,'p_expression_primitive','parser.py',563),
  ('expression -> listArray','expression',1,'p_expression_primitive','parser.py',564),
  ('expression -> L_BRACKET expressionList R_BRACKET','expression',3,'p_expression_array_primitive','parser.py',569),
  ('listArray -> listArray L_BRACKET expression R_BRACKET','listArray',4,'p_expression_list_array','parser.py',575),
  ('listArray -> listArray DOT ID','listArray',3,'p_expression_list_array','parser.py',576),
  ('listArray -> ID','listArray',1,'p_expression_list_array','parser.py',577),
]
