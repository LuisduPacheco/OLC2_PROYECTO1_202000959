Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CONTINUE
    DECIMAL
    IF
    INT
    L_KEY
    RETURN
    R_KEY
    WHILE

Grammar

Rule 0     S' -> s
Rule 1     s -> block
Rule 2     block -> block instruction
Rule 3     block -> instruction
Rule 4     instruction -> print
Rule 5     instruction -> declaration
Rule 6     instruction -> assignment
Rule 7     print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON
Rule 8     declaration -> VAR ID COLON type EQUAL expression SEMICOLON
Rule 9     declaration -> VAR ID EQUAL expression SEMICOLON
Rule 10    declaration -> VAR ID COLON type SEMICOLON
Rule 11    declaration -> CONST ID COLON type EQUAL expression SEMICOLON
Rule 12    declaration -> CONST ID EQUAL expression SEMICOLON
Rule 13    assignment -> ID EQUAL expression SEMICOLON
Rule 14    assignment -> ID ADD_ASSIGN expression SEMICOLON
Rule 15    assignment -> ID SUB_ASSIGN expression SEMICOLON
Rule 16    type -> NUMBER
Rule 17    type -> FLOAT
Rule 18    type -> STRING
Rule 19    type -> BOOLEAN
Rule 20    type -> CHAR
Rule 21    expressionList -> expressionList COMMA expression
Rule 22    expressionList -> expression
Rule 23    expression -> expression PLUS expression
Rule 24    expression -> expression MINUS expression
Rule 25    expression -> expression BY expression
Rule 26    expression -> expression DIVISION expression
Rule 27    expression -> expression MODULO expression
Rule 28    expression -> expression EQEQUAL expression
Rule 29    expression -> expression DIF expression
Rule 30    expression -> expression GREATER expression
Rule 31    expression -> expression GREATER_E expression
Rule 32    expression -> expression LESS expression
Rule 33    expression -> expression LESS_E expression
Rule 34    expression -> expression AND expression
Rule 35    expression -> expression OR expression
Rule 36    expression -> NEGATE expression
Rule 37    expression -> L_PAR expression R_PAR
Rule 38    expression -> NUMBER
Rule 39    expression -> STRING
Rule 40    expression -> FLOAT
Rule 41    expression -> CHAR
Rule 42    expression -> BOOLEAN
Rule 43    expression -> listArray
Rule 44    expression -> L_BRACKET expressionList R_BRACKET
Rule 45    listArray -> listArray L_BRACKET expression R_BRACKET
Rule 46    listArray -> listArray DOT ID
Rule 47    listArray -> ID

Terminals, with rules where they appear

ADD_ASSIGN           : 14
AND                  : 34
BOOLEAN              : 19 42
BREAK                : 
BY                   : 25
CHAR                 : 20 41
COLON                : 8 10 11
COMMA                : 21
CONSOLE              : 7
CONST                : 11 12
CONTINUE             : 
DECIMAL              : 
DIF                  : 29
DIVISION             : 26
DOT                  : 7 46
EQEQUAL              : 28
EQUAL                : 8 9 11 12 13
FLOAT                : 17 40
GREATER              : 30
GREATER_E            : 31
ID                   : 8 9 10 11 12 13 14 15 46 47
IF                   : 
INT                  : 
LESS                 : 32
LESS_E               : 33
LOG                  : 7
L_BRACKET            : 44 45
L_KEY                : 
L_PAR                : 7 37
MINUS                : 24
MODULO               : 27
NEGATE               : 36
NUMBER               : 16 38
OR                   : 35
PLUS                 : 23
RETURN               : 
R_BRACKET            : 44 45
R_KEY                : 
R_PAR                : 7 37
SEMICOLON            : 7 8 9 10 11 12 13 14 15
STRING               : 18 39
SUB_ASSIGN           : 15
VAR                  : 8 9 10
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assignment           : 6
block                : 1 2
declaration          : 5
expression           : 8 9 11 12 13 14 15 21 22 23 23 24 24 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 45
expressionList       : 7 21 44
instruction          : 2 3
listArray            : 43 45 46
print                : 4
s                    : 0
type                 : 8 10 11

Parsing method: LALR

state 0

    (0) S' -> . s
    (1) s -> . block
    (2) block -> . block instruction
    (3) block -> . instruction
    (4) instruction -> . print
    (5) instruction -> . declaration
    (6) instruction -> . assignment
    (7) print -> . CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON
    (8) declaration -> . VAR ID COLON type EQUAL expression SEMICOLON
    (9) declaration -> . VAR ID EQUAL expression SEMICOLON
    (10) declaration -> . VAR ID COLON type SEMICOLON
    (11) declaration -> . CONST ID COLON type EQUAL expression SEMICOLON
    (12) declaration -> . CONST ID EQUAL expression SEMICOLON
    (13) assignment -> . ID EQUAL expression SEMICOLON
    (14) assignment -> . ID ADD_ASSIGN expression SEMICOLON
    (15) assignment -> . ID SUB_ASSIGN expression SEMICOLON

    CONSOLE         shift and go to state 7
    VAR             shift and go to state 8
    CONST           shift and go to state 10
    ID              shift and go to state 9

    s                              shift and go to state 1
    block                          shift and go to state 2
    instruction                    shift and go to state 3
    print                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6

state 1

    (0) S' -> s .



state 2

    (1) s -> block .
    (2) block -> block . instruction
    (4) instruction -> . print
    (5) instruction -> . declaration
    (6) instruction -> . assignment
    (7) print -> . CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON
    (8) declaration -> . VAR ID COLON type EQUAL expression SEMICOLON
    (9) declaration -> . VAR ID EQUAL expression SEMICOLON
    (10) declaration -> . VAR ID COLON type SEMICOLON
    (11) declaration -> . CONST ID COLON type EQUAL expression SEMICOLON
    (12) declaration -> . CONST ID EQUAL expression SEMICOLON
    (13) assignment -> . ID EQUAL expression SEMICOLON
    (14) assignment -> . ID ADD_ASSIGN expression SEMICOLON
    (15) assignment -> . ID SUB_ASSIGN expression SEMICOLON

    $end            reduce using rule 1 (s -> block .)
    CONSOLE         shift and go to state 7
    VAR             shift and go to state 8
    CONST           shift and go to state 10
    ID              shift and go to state 9

    instruction                    shift and go to state 11
    print                          shift and go to state 4
    declaration                    shift and go to state 5
    assignment                     shift and go to state 6

state 3

    (3) block -> instruction .

    CONSOLE         reduce using rule 3 (block -> instruction .)
    VAR             reduce using rule 3 (block -> instruction .)
    CONST           reduce using rule 3 (block -> instruction .)
    ID              reduce using rule 3 (block -> instruction .)
    $end            reduce using rule 3 (block -> instruction .)


state 4

    (4) instruction -> print .

    CONSOLE         reduce using rule 4 (instruction -> print .)
    VAR             reduce using rule 4 (instruction -> print .)
    CONST           reduce using rule 4 (instruction -> print .)
    ID              reduce using rule 4 (instruction -> print .)
    $end            reduce using rule 4 (instruction -> print .)


state 5

    (5) instruction -> declaration .

    CONSOLE         reduce using rule 5 (instruction -> declaration .)
    VAR             reduce using rule 5 (instruction -> declaration .)
    CONST           reduce using rule 5 (instruction -> declaration .)
    ID              reduce using rule 5 (instruction -> declaration .)
    $end            reduce using rule 5 (instruction -> declaration .)


state 6

    (6) instruction -> assignment .

    CONSOLE         reduce using rule 6 (instruction -> assignment .)
    VAR             reduce using rule 6 (instruction -> assignment .)
    CONST           reduce using rule 6 (instruction -> assignment .)
    ID              reduce using rule 6 (instruction -> assignment .)
    $end            reduce using rule 6 (instruction -> assignment .)


state 7

    (7) print -> CONSOLE . DOT LOG L_PAR expressionList R_PAR SEMICOLON

    DOT             shift and go to state 12


state 8

    (8) declaration -> VAR . ID COLON type EQUAL expression SEMICOLON
    (9) declaration -> VAR . ID EQUAL expression SEMICOLON
    (10) declaration -> VAR . ID COLON type SEMICOLON

    ID              shift and go to state 13


state 9

    (13) assignment -> ID . EQUAL expression SEMICOLON
    (14) assignment -> ID . ADD_ASSIGN expression SEMICOLON
    (15) assignment -> ID . SUB_ASSIGN expression SEMICOLON

    EQUAL           shift and go to state 14
    ADD_ASSIGN      shift and go to state 15
    SUB_ASSIGN      shift and go to state 16


state 10

    (11) declaration -> CONST . ID COLON type EQUAL expression SEMICOLON
    (12) declaration -> CONST . ID EQUAL expression SEMICOLON

    ID              shift and go to state 17


state 11

    (2) block -> block instruction .

    CONSOLE         reduce using rule 2 (block -> block instruction .)
    VAR             reduce using rule 2 (block -> block instruction .)
    CONST           reduce using rule 2 (block -> block instruction .)
    ID              reduce using rule 2 (block -> block instruction .)
    $end            reduce using rule 2 (block -> block instruction .)


state 12

    (7) print -> CONSOLE DOT . LOG L_PAR expressionList R_PAR SEMICOLON

    LOG             shift and go to state 18


state 13

    (8) declaration -> VAR ID . COLON type EQUAL expression SEMICOLON
    (9) declaration -> VAR ID . EQUAL expression SEMICOLON
    (10) declaration -> VAR ID . COLON type SEMICOLON

    COLON           shift and go to state 19
    EQUAL           shift and go to state 20


state 14

    (13) assignment -> ID EQUAL . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 22
    listArray                      shift and go to state 30

state 15

    (14) assignment -> ID ADD_ASSIGN . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 32
    listArray                      shift and go to state 30

state 16

    (15) assignment -> ID SUB_ASSIGN . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 33
    listArray                      shift and go to state 30

state 17

    (11) declaration -> CONST ID . COLON type EQUAL expression SEMICOLON
    (12) declaration -> CONST ID . EQUAL expression SEMICOLON

    COLON           shift and go to state 34
    EQUAL           shift and go to state 35


state 18

    (7) print -> CONSOLE DOT LOG . L_PAR expressionList R_PAR SEMICOLON

    L_PAR           shift and go to state 36


state 19

    (8) declaration -> VAR ID COLON . type EQUAL expression SEMICOLON
    (10) declaration -> VAR ID COLON . type SEMICOLON
    (16) type -> . NUMBER
    (17) type -> . FLOAT
    (18) type -> . STRING
    (19) type -> . BOOLEAN
    (20) type -> . CHAR

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42

    type                           shift and go to state 37

state 20

    (9) declaration -> VAR ID EQUAL . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 43
    listArray                      shift and go to state 30

state 21

    (47) listArray -> ID .

    L_BRACKET       reduce using rule 47 (listArray -> ID .)
    DOT             reduce using rule 47 (listArray -> ID .)
    SEMICOLON       reduce using rule 47 (listArray -> ID .)
    PLUS            reduce using rule 47 (listArray -> ID .)
    MINUS           reduce using rule 47 (listArray -> ID .)
    BY              reduce using rule 47 (listArray -> ID .)
    DIVISION        reduce using rule 47 (listArray -> ID .)
    MODULO          reduce using rule 47 (listArray -> ID .)
    EQEQUAL         reduce using rule 47 (listArray -> ID .)
    DIF             reduce using rule 47 (listArray -> ID .)
    GREATER         reduce using rule 47 (listArray -> ID .)
    GREATER_E       reduce using rule 47 (listArray -> ID .)
    LESS            reduce using rule 47 (listArray -> ID .)
    LESS_E          reduce using rule 47 (listArray -> ID .)
    AND             reduce using rule 47 (listArray -> ID .)
    OR              reduce using rule 47 (listArray -> ID .)
    R_PAR           reduce using rule 47 (listArray -> ID .)
    R_BRACKET       reduce using rule 47 (listArray -> ID .)
    COMMA           reduce using rule 47 (listArray -> ID .)


state 22

    (13) assignment -> ID EQUAL expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 44
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 23

    (36) expression -> NEGATE . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 58
    listArray                      shift and go to state 30

state 24

    (37) expression -> L_PAR . expression R_PAR
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 59
    listArray                      shift and go to state 30

state 25

    (38) expression -> NUMBER .

    SEMICOLON       reduce using rule 38 (expression -> NUMBER .)
    PLUS            reduce using rule 38 (expression -> NUMBER .)
    MINUS           reduce using rule 38 (expression -> NUMBER .)
    BY              reduce using rule 38 (expression -> NUMBER .)
    DIVISION        reduce using rule 38 (expression -> NUMBER .)
    MODULO          reduce using rule 38 (expression -> NUMBER .)
    EQEQUAL         reduce using rule 38 (expression -> NUMBER .)
    DIF             reduce using rule 38 (expression -> NUMBER .)
    GREATER         reduce using rule 38 (expression -> NUMBER .)
    GREATER_E       reduce using rule 38 (expression -> NUMBER .)
    LESS            reduce using rule 38 (expression -> NUMBER .)
    LESS_E          reduce using rule 38 (expression -> NUMBER .)
    AND             reduce using rule 38 (expression -> NUMBER .)
    OR              reduce using rule 38 (expression -> NUMBER .)
    R_PAR           reduce using rule 38 (expression -> NUMBER .)
    R_BRACKET       reduce using rule 38 (expression -> NUMBER .)
    COMMA           reduce using rule 38 (expression -> NUMBER .)


state 26

    (39) expression -> STRING .

    SEMICOLON       reduce using rule 39 (expression -> STRING .)
    PLUS            reduce using rule 39 (expression -> STRING .)
    MINUS           reduce using rule 39 (expression -> STRING .)
    BY              reduce using rule 39 (expression -> STRING .)
    DIVISION        reduce using rule 39 (expression -> STRING .)
    MODULO          reduce using rule 39 (expression -> STRING .)
    EQEQUAL         reduce using rule 39 (expression -> STRING .)
    DIF             reduce using rule 39 (expression -> STRING .)
    GREATER         reduce using rule 39 (expression -> STRING .)
    GREATER_E       reduce using rule 39 (expression -> STRING .)
    LESS            reduce using rule 39 (expression -> STRING .)
    LESS_E          reduce using rule 39 (expression -> STRING .)
    AND             reduce using rule 39 (expression -> STRING .)
    OR              reduce using rule 39 (expression -> STRING .)
    R_PAR           reduce using rule 39 (expression -> STRING .)
    R_BRACKET       reduce using rule 39 (expression -> STRING .)
    COMMA           reduce using rule 39 (expression -> STRING .)


state 27

    (40) expression -> FLOAT .

    SEMICOLON       reduce using rule 40 (expression -> FLOAT .)
    PLUS            reduce using rule 40 (expression -> FLOAT .)
    MINUS           reduce using rule 40 (expression -> FLOAT .)
    BY              reduce using rule 40 (expression -> FLOAT .)
    DIVISION        reduce using rule 40 (expression -> FLOAT .)
    MODULO          reduce using rule 40 (expression -> FLOAT .)
    EQEQUAL         reduce using rule 40 (expression -> FLOAT .)
    DIF             reduce using rule 40 (expression -> FLOAT .)
    GREATER         reduce using rule 40 (expression -> FLOAT .)
    GREATER_E       reduce using rule 40 (expression -> FLOAT .)
    LESS            reduce using rule 40 (expression -> FLOAT .)
    LESS_E          reduce using rule 40 (expression -> FLOAT .)
    AND             reduce using rule 40 (expression -> FLOAT .)
    OR              reduce using rule 40 (expression -> FLOAT .)
    R_PAR           reduce using rule 40 (expression -> FLOAT .)
    R_BRACKET       reduce using rule 40 (expression -> FLOAT .)
    COMMA           reduce using rule 40 (expression -> FLOAT .)


state 28

    (41) expression -> CHAR .

    SEMICOLON       reduce using rule 41 (expression -> CHAR .)
    PLUS            reduce using rule 41 (expression -> CHAR .)
    MINUS           reduce using rule 41 (expression -> CHAR .)
    BY              reduce using rule 41 (expression -> CHAR .)
    DIVISION        reduce using rule 41 (expression -> CHAR .)
    MODULO          reduce using rule 41 (expression -> CHAR .)
    EQEQUAL         reduce using rule 41 (expression -> CHAR .)
    DIF             reduce using rule 41 (expression -> CHAR .)
    GREATER         reduce using rule 41 (expression -> CHAR .)
    GREATER_E       reduce using rule 41 (expression -> CHAR .)
    LESS            reduce using rule 41 (expression -> CHAR .)
    LESS_E          reduce using rule 41 (expression -> CHAR .)
    AND             reduce using rule 41 (expression -> CHAR .)
    OR              reduce using rule 41 (expression -> CHAR .)
    R_PAR           reduce using rule 41 (expression -> CHAR .)
    R_BRACKET       reduce using rule 41 (expression -> CHAR .)
    COMMA           reduce using rule 41 (expression -> CHAR .)


state 29

    (42) expression -> BOOLEAN .

    SEMICOLON       reduce using rule 42 (expression -> BOOLEAN .)
    PLUS            reduce using rule 42 (expression -> BOOLEAN .)
    MINUS           reduce using rule 42 (expression -> BOOLEAN .)
    BY              reduce using rule 42 (expression -> BOOLEAN .)
    DIVISION        reduce using rule 42 (expression -> BOOLEAN .)
    MODULO          reduce using rule 42 (expression -> BOOLEAN .)
    EQEQUAL         reduce using rule 42 (expression -> BOOLEAN .)
    DIF             reduce using rule 42 (expression -> BOOLEAN .)
    GREATER         reduce using rule 42 (expression -> BOOLEAN .)
    GREATER_E       reduce using rule 42 (expression -> BOOLEAN .)
    LESS            reduce using rule 42 (expression -> BOOLEAN .)
    LESS_E          reduce using rule 42 (expression -> BOOLEAN .)
    AND             reduce using rule 42 (expression -> BOOLEAN .)
    OR              reduce using rule 42 (expression -> BOOLEAN .)
    R_PAR           reduce using rule 42 (expression -> BOOLEAN .)
    R_BRACKET       reduce using rule 42 (expression -> BOOLEAN .)
    COMMA           reduce using rule 42 (expression -> BOOLEAN .)


state 30

    (43) expression -> listArray .
    (45) listArray -> listArray . L_BRACKET expression R_BRACKET
    (46) listArray -> listArray . DOT ID

    SEMICOLON       reduce using rule 43 (expression -> listArray .)
    PLUS            reduce using rule 43 (expression -> listArray .)
    MINUS           reduce using rule 43 (expression -> listArray .)
    BY              reduce using rule 43 (expression -> listArray .)
    DIVISION        reduce using rule 43 (expression -> listArray .)
    MODULO          reduce using rule 43 (expression -> listArray .)
    EQEQUAL         reduce using rule 43 (expression -> listArray .)
    DIF             reduce using rule 43 (expression -> listArray .)
    GREATER         reduce using rule 43 (expression -> listArray .)
    GREATER_E       reduce using rule 43 (expression -> listArray .)
    LESS            reduce using rule 43 (expression -> listArray .)
    LESS_E          reduce using rule 43 (expression -> listArray .)
    AND             reduce using rule 43 (expression -> listArray .)
    OR              reduce using rule 43 (expression -> listArray .)
    R_PAR           reduce using rule 43 (expression -> listArray .)
    R_BRACKET       reduce using rule 43 (expression -> listArray .)
    COMMA           reduce using rule 43 (expression -> listArray .)
    L_BRACKET       shift and go to state 60
    DOT             shift and go to state 61


state 31

    (44) expression -> L_BRACKET . expressionList R_BRACKET
    (21) expressionList -> . expressionList COMMA expression
    (22) expressionList -> . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expressionList                 shift and go to state 62
    expression                     shift and go to state 63
    listArray                      shift and go to state 30

state 32

    (14) assignment -> ID ADD_ASSIGN expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 64
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 33

    (15) assignment -> ID SUB_ASSIGN expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 65
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 34

    (11) declaration -> CONST ID COLON . type EQUAL expression SEMICOLON
    (16) type -> . NUMBER
    (17) type -> . FLOAT
    (18) type -> . STRING
    (19) type -> . BOOLEAN
    (20) type -> . CHAR

    NUMBER          shift and go to state 38
    FLOAT           shift and go to state 39
    STRING          shift and go to state 40
    BOOLEAN         shift and go to state 41
    CHAR            shift and go to state 42

    type                           shift and go to state 66

state 35

    (12) declaration -> CONST ID EQUAL . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 67
    listArray                      shift and go to state 30

state 36

    (7) print -> CONSOLE DOT LOG L_PAR . expressionList R_PAR SEMICOLON
    (21) expressionList -> . expressionList COMMA expression
    (22) expressionList -> . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expressionList                 shift and go to state 68
    expression                     shift and go to state 63
    listArray                      shift and go to state 30

state 37

    (8) declaration -> VAR ID COLON type . EQUAL expression SEMICOLON
    (10) declaration -> VAR ID COLON type . SEMICOLON

    EQUAL           shift and go to state 69
    SEMICOLON       shift and go to state 70


state 38

    (16) type -> NUMBER .

    EQUAL           reduce using rule 16 (type -> NUMBER .)
    SEMICOLON       reduce using rule 16 (type -> NUMBER .)


state 39

    (17) type -> FLOAT .

    EQUAL           reduce using rule 17 (type -> FLOAT .)
    SEMICOLON       reduce using rule 17 (type -> FLOAT .)


state 40

    (18) type -> STRING .

    EQUAL           reduce using rule 18 (type -> STRING .)
    SEMICOLON       reduce using rule 18 (type -> STRING .)


state 41

    (19) type -> BOOLEAN .

    EQUAL           reduce using rule 19 (type -> BOOLEAN .)
    SEMICOLON       reduce using rule 19 (type -> BOOLEAN .)


state 42

    (20) type -> CHAR .

    EQUAL           reduce using rule 20 (type -> CHAR .)
    SEMICOLON       reduce using rule 20 (type -> CHAR .)


state 43

    (9) declaration -> VAR ID EQUAL expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 71
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 44

    (13) assignment -> ID EQUAL expression SEMICOLON .

    CONSOLE         reduce using rule 13 (assignment -> ID EQUAL expression SEMICOLON .)
    VAR             reduce using rule 13 (assignment -> ID EQUAL expression SEMICOLON .)
    CONST           reduce using rule 13 (assignment -> ID EQUAL expression SEMICOLON .)
    ID              reduce using rule 13 (assignment -> ID EQUAL expression SEMICOLON .)
    $end            reduce using rule 13 (assignment -> ID EQUAL expression SEMICOLON .)


state 45

    (23) expression -> expression PLUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 72
    listArray                      shift and go to state 30

state 46

    (24) expression -> expression MINUS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 73
    listArray                      shift and go to state 30

state 47

    (25) expression -> expression BY . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 74
    listArray                      shift and go to state 30

state 48

    (26) expression -> expression DIVISION . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 75
    listArray                      shift and go to state 30

state 49

    (27) expression -> expression MODULO . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 76
    listArray                      shift and go to state 30

state 50

    (28) expression -> expression EQEQUAL . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 77
    listArray                      shift and go to state 30

state 51

    (29) expression -> expression DIF . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 78
    listArray                      shift and go to state 30

state 52

    (30) expression -> expression GREATER . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 79
    listArray                      shift and go to state 30

state 53

    (31) expression -> expression GREATER_E . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 80
    listArray                      shift and go to state 30

state 54

    (32) expression -> expression LESS . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 81
    listArray                      shift and go to state 30

state 55

    (33) expression -> expression LESS_E . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 82
    listArray                      shift and go to state 30

state 56

    (34) expression -> expression AND . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 83
    listArray                      shift and go to state 30

state 57

    (35) expression -> expression OR . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 84
    listArray                      shift and go to state 30

state 58

    (36) expression -> NEGATE expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATER_E resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESS_E resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 36 (expression -> NEGATE expression .)
    R_PAR           reduce using rule 36 (expression -> NEGATE expression .)
    R_BRACKET       reduce using rule 36 (expression -> NEGATE expression .)
    COMMA           reduce using rule 36 (expression -> NEGATE expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! PLUS            [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! BY              [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! DIVISION        [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! MODULO          [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! EQEQUAL         [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! DIF             [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! GREATER         [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! GREATER_E       [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! LESS            [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! LESS_E          [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! AND             [ reduce using rule 36 (expression -> NEGATE expression .) ]
  ! OR              [ reduce using rule 36 (expression -> NEGATE expression .) ]


state 59

    (37) expression -> L_PAR expression . R_PAR
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    R_PAR           shift and go to state 85
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 60

    (45) listArray -> listArray L_BRACKET . expression R_BRACKET
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    listArray                      shift and go to state 30
    expression                     shift and go to state 86

state 61

    (46) listArray -> listArray DOT . ID

    ID              shift and go to state 87


state 62

    (44) expression -> L_BRACKET expressionList . R_BRACKET
    (21) expressionList -> expressionList . COMMA expression

    R_BRACKET       shift and go to state 88
    COMMA           shift and go to state 89


state 63

    (22) expressionList -> expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    R_BRACKET       reduce using rule 22 (expressionList -> expression .)
    COMMA           reduce using rule 22 (expressionList -> expression .)
    R_PAR           reduce using rule 22 (expressionList -> expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 64

    (14) assignment -> ID ADD_ASSIGN expression SEMICOLON .

    CONSOLE         reduce using rule 14 (assignment -> ID ADD_ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 14 (assignment -> ID ADD_ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 14 (assignment -> ID ADD_ASSIGN expression SEMICOLON .)
    ID              reduce using rule 14 (assignment -> ID ADD_ASSIGN expression SEMICOLON .)
    $end            reduce using rule 14 (assignment -> ID ADD_ASSIGN expression SEMICOLON .)


state 65

    (15) assignment -> ID SUB_ASSIGN expression SEMICOLON .

    CONSOLE         reduce using rule 15 (assignment -> ID SUB_ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 15 (assignment -> ID SUB_ASSIGN expression SEMICOLON .)
    CONST           reduce using rule 15 (assignment -> ID SUB_ASSIGN expression SEMICOLON .)
    ID              reduce using rule 15 (assignment -> ID SUB_ASSIGN expression SEMICOLON .)
    $end            reduce using rule 15 (assignment -> ID SUB_ASSIGN expression SEMICOLON .)


state 66

    (11) declaration -> CONST ID COLON type . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 90


state 67

    (12) declaration -> CONST ID EQUAL expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 91
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 68

    (7) print -> CONSOLE DOT LOG L_PAR expressionList . R_PAR SEMICOLON
    (21) expressionList -> expressionList . COMMA expression

    R_PAR           shift and go to state 92
    COMMA           shift and go to state 89


state 69

    (8) declaration -> VAR ID COLON type EQUAL . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 93
    listArray                      shift and go to state 30

state 70

    (10) declaration -> VAR ID COLON type SEMICOLON .

    CONSOLE         reduce using rule 10 (declaration -> VAR ID COLON type SEMICOLON .)
    VAR             reduce using rule 10 (declaration -> VAR ID COLON type SEMICOLON .)
    CONST           reduce using rule 10 (declaration -> VAR ID COLON type SEMICOLON .)
    ID              reduce using rule 10 (declaration -> VAR ID COLON type SEMICOLON .)
    $end            reduce using rule 10 (declaration -> VAR ID COLON type SEMICOLON .)


state 71

    (9) declaration -> VAR ID EQUAL expression SEMICOLON .

    CONSOLE         reduce using rule 9 (declaration -> VAR ID EQUAL expression SEMICOLON .)
    VAR             reduce using rule 9 (declaration -> VAR ID EQUAL expression SEMICOLON .)
    CONST           reduce using rule 9 (declaration -> VAR ID EQUAL expression SEMICOLON .)
    ID              reduce using rule 9 (declaration -> VAR ID EQUAL expression SEMICOLON .)
    $end            reduce using rule 9 (declaration -> VAR ID EQUAL expression SEMICOLON .)


state 72

    (23) expression -> expression PLUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 23 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 23 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 23 (expression -> expression PLUS expression .)
    MODULO          reduce using rule 23 (expression -> expression PLUS expression .)
    EQEQUAL         reduce using rule 23 (expression -> expression PLUS expression .)
    DIF             reduce using rule 23 (expression -> expression PLUS expression .)
    R_PAR           reduce using rule 23 (expression -> expression PLUS expression .)
    R_BRACKET       reduce using rule 23 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 23 (expression -> expression PLUS expression .)
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! BY              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! DIVISION        [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! GREATER         [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! GREATER_E       [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! LESS            [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! LESS_E          [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 23 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 73

    (24) expression -> expression MINUS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 24 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 24 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 24 (expression -> expression MINUS expression .)
    MODULO          reduce using rule 24 (expression -> expression MINUS expression .)
    EQEQUAL         reduce using rule 24 (expression -> expression MINUS expression .)
    DIF             reduce using rule 24 (expression -> expression MINUS expression .)
    R_PAR           reduce using rule 24 (expression -> expression MINUS expression .)
    R_BRACKET       reduce using rule 24 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 24 (expression -> expression MINUS expression .)
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! BY              [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! DIVISION        [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! GREATER         [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! GREATER_E       [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! LESS            [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! LESS_E          [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 24 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 74

    (25) expression -> expression BY expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 25 (expression -> expression BY expression .)
    PLUS            reduce using rule 25 (expression -> expression BY expression .)
    MINUS           reduce using rule 25 (expression -> expression BY expression .)
    BY              reduce using rule 25 (expression -> expression BY expression .)
    DIVISION        reduce using rule 25 (expression -> expression BY expression .)
    MODULO          reduce using rule 25 (expression -> expression BY expression .)
    EQEQUAL         reduce using rule 25 (expression -> expression BY expression .)
    DIF             reduce using rule 25 (expression -> expression BY expression .)
    R_PAR           reduce using rule 25 (expression -> expression BY expression .)
    R_BRACKET       reduce using rule 25 (expression -> expression BY expression .)
    COMMA           reduce using rule 25 (expression -> expression BY expression .)
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! GREATER         [ reduce using rule 25 (expression -> expression BY expression .) ]
  ! GREATER_E       [ reduce using rule 25 (expression -> expression BY expression .) ]
  ! LESS            [ reduce using rule 25 (expression -> expression BY expression .) ]
  ! LESS_E          [ reduce using rule 25 (expression -> expression BY expression .) ]
  ! AND             [ reduce using rule 25 (expression -> expression BY expression .) ]
  ! OR              [ reduce using rule 25 (expression -> expression BY expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 75

    (26) expression -> expression DIVISION expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 26 (expression -> expression DIVISION expression .)
    PLUS            reduce using rule 26 (expression -> expression DIVISION expression .)
    MINUS           reduce using rule 26 (expression -> expression DIVISION expression .)
    BY              reduce using rule 26 (expression -> expression DIVISION expression .)
    DIVISION        reduce using rule 26 (expression -> expression DIVISION expression .)
    MODULO          reduce using rule 26 (expression -> expression DIVISION expression .)
    EQEQUAL         reduce using rule 26 (expression -> expression DIVISION expression .)
    DIF             reduce using rule 26 (expression -> expression DIVISION expression .)
    R_PAR           reduce using rule 26 (expression -> expression DIVISION expression .)
    R_BRACKET       reduce using rule 26 (expression -> expression DIVISION expression .)
    COMMA           reduce using rule 26 (expression -> expression DIVISION expression .)
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! GREATER         [ reduce using rule 26 (expression -> expression DIVISION expression .) ]
  ! GREATER_E       [ reduce using rule 26 (expression -> expression DIVISION expression .) ]
  ! LESS            [ reduce using rule 26 (expression -> expression DIVISION expression .) ]
  ! LESS_E          [ reduce using rule 26 (expression -> expression DIVISION expression .) ]
  ! AND             [ reduce using rule 26 (expression -> expression DIVISION expression .) ]
  ! OR              [ reduce using rule 26 (expression -> expression DIVISION expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]


state 76

    (27) expression -> expression MODULO expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATER_E resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESS_E resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 27 (expression -> expression MODULO expression .)
    R_PAR           reduce using rule 27 (expression -> expression MODULO expression .)
    R_BRACKET       reduce using rule 27 (expression -> expression MODULO expression .)
    COMMA           reduce using rule 27 (expression -> expression MODULO expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! PLUS            [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! MINUS           [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! BY              [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! DIVISION        [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! MODULO          [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! EQEQUAL         [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! DIF             [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! GREATER         [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! GREATER_E       [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! LESS            [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! LESS_E          [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! AND             [ reduce using rule 27 (expression -> expression MODULO expression .) ]
  ! OR              [ reduce using rule 27 (expression -> expression MODULO expression .) ]


state 77

    (28) expression -> expression EQEQUAL expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATER_E resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESS_E resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 28 (expression -> expression EQEQUAL expression .)
    R_PAR           reduce using rule 28 (expression -> expression EQEQUAL expression .)
    R_BRACKET       reduce using rule 28 (expression -> expression EQEQUAL expression .)
    COMMA           reduce using rule 28 (expression -> expression EQEQUAL expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! PLUS            [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! BY              [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! DIVISION        [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! MODULO          [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! EQEQUAL         [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! DIF             [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! GREATER         [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! GREATER_E       [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! LESS            [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! LESS_E          [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! AND             [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]
  ! OR              [ reduce using rule 28 (expression -> expression EQEQUAL expression .) ]


state 78

    (29) expression -> expression DIF expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for BY resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for EQEQUAL resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for GREATER resolved as shift
  ! shift/reduce conflict for GREATER_E resolved as shift
  ! shift/reduce conflict for LESS resolved as shift
  ! shift/reduce conflict for LESS_E resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    SEMICOLON       reduce using rule 29 (expression -> expression DIF expression .)
    R_PAR           reduce using rule 29 (expression -> expression DIF expression .)
    R_BRACKET       reduce using rule 29 (expression -> expression DIF expression .)
    COMMA           reduce using rule 29 (expression -> expression DIF expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! PLUS            [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! BY              [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! DIVISION        [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! MODULO          [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! EQEQUAL         [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! DIF             [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! GREATER         [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! GREATER_E       [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! LESS            [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! LESS_E          [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! AND             [ reduce using rule 29 (expression -> expression DIF expression .) ]
  ! OR              [ reduce using rule 29 (expression -> expression DIF expression .) ]


state 79

    (30) expression -> expression GREATER expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 30 (expression -> expression GREATER expression .)
    PLUS            reduce using rule 30 (expression -> expression GREATER expression .)
    MINUS           reduce using rule 30 (expression -> expression GREATER expression .)
    BY              reduce using rule 30 (expression -> expression GREATER expression .)
    DIVISION        reduce using rule 30 (expression -> expression GREATER expression .)
    MODULO          reduce using rule 30 (expression -> expression GREATER expression .)
    EQEQUAL         reduce using rule 30 (expression -> expression GREATER expression .)
    DIF             reduce using rule 30 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 30 (expression -> expression GREATER expression .)
    LESS            reduce using rule 30 (expression -> expression GREATER expression .)
    R_PAR           reduce using rule 30 (expression -> expression GREATER expression .)
    R_BRACKET       reduce using rule 30 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 30 (expression -> expression GREATER expression .)
    GREATER_E       shift and go to state 53
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! GREATER_E       [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! LESS_E          [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! AND             [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! OR              [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS            [ shift and go to state 54 ]


state 80

    (31) expression -> expression GREATER_E expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 31 (expression -> expression GREATER_E expression .)
    PLUS            reduce using rule 31 (expression -> expression GREATER_E expression .)
    MINUS           reduce using rule 31 (expression -> expression GREATER_E expression .)
    BY              reduce using rule 31 (expression -> expression GREATER_E expression .)
    DIVISION        reduce using rule 31 (expression -> expression GREATER_E expression .)
    MODULO          reduce using rule 31 (expression -> expression GREATER_E expression .)
    EQEQUAL         reduce using rule 31 (expression -> expression GREATER_E expression .)
    DIF             reduce using rule 31 (expression -> expression GREATER_E expression .)
    GREATER         reduce using rule 31 (expression -> expression GREATER_E expression .)
    GREATER_E       reduce using rule 31 (expression -> expression GREATER_E expression .)
    LESS            reduce using rule 31 (expression -> expression GREATER_E expression .)
    LESS_E          reduce using rule 31 (expression -> expression GREATER_E expression .)
    R_PAR           reduce using rule 31 (expression -> expression GREATER_E expression .)
    R_BRACKET       reduce using rule 31 (expression -> expression GREATER_E expression .)
    COMMA           reduce using rule 31 (expression -> expression GREATER_E expression .)
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! AND             [ reduce using rule 31 (expression -> expression GREATER_E expression .) ]
  ! OR              [ reduce using rule 31 (expression -> expression GREATER_E expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! GREATER_E       [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! LESS_E          [ shift and go to state 55 ]


state 81

    (32) expression -> expression LESS expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 32 (expression -> expression LESS expression .)
    PLUS            reduce using rule 32 (expression -> expression LESS expression .)
    MINUS           reduce using rule 32 (expression -> expression LESS expression .)
    BY              reduce using rule 32 (expression -> expression LESS expression .)
    DIVISION        reduce using rule 32 (expression -> expression LESS expression .)
    MODULO          reduce using rule 32 (expression -> expression LESS expression .)
    EQEQUAL         reduce using rule 32 (expression -> expression LESS expression .)
    DIF             reduce using rule 32 (expression -> expression LESS expression .)
    GREATER         reduce using rule 32 (expression -> expression LESS expression .)
    LESS            reduce using rule 32 (expression -> expression LESS expression .)
    R_PAR           reduce using rule 32 (expression -> expression LESS expression .)
    R_BRACKET       reduce using rule 32 (expression -> expression LESS expression .)
    COMMA           reduce using rule 32 (expression -> expression LESS expression .)
    GREATER_E       shift and go to state 53
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! GREATER_E       [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! LESS_E          [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! OR              [ reduce using rule 32 (expression -> expression LESS expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! LESS            [ shift and go to state 54 ]


state 82

    (33) expression -> expression LESS_E expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 33 (expression -> expression LESS_E expression .)
    PLUS            reduce using rule 33 (expression -> expression LESS_E expression .)
    MINUS           reduce using rule 33 (expression -> expression LESS_E expression .)
    BY              reduce using rule 33 (expression -> expression LESS_E expression .)
    DIVISION        reduce using rule 33 (expression -> expression LESS_E expression .)
    MODULO          reduce using rule 33 (expression -> expression LESS_E expression .)
    EQEQUAL         reduce using rule 33 (expression -> expression LESS_E expression .)
    DIF             reduce using rule 33 (expression -> expression LESS_E expression .)
    GREATER         reduce using rule 33 (expression -> expression LESS_E expression .)
    GREATER_E       reduce using rule 33 (expression -> expression LESS_E expression .)
    LESS            reduce using rule 33 (expression -> expression LESS_E expression .)
    LESS_E          reduce using rule 33 (expression -> expression LESS_E expression .)
    R_PAR           reduce using rule 33 (expression -> expression LESS_E expression .)
    R_BRACKET       reduce using rule 33 (expression -> expression LESS_E expression .)
    COMMA           reduce using rule 33 (expression -> expression LESS_E expression .)
    AND             shift and go to state 56
    OR              shift and go to state 57

  ! AND             [ reduce using rule 33 (expression -> expression LESS_E expression .) ]
  ! OR              [ reduce using rule 33 (expression -> expression LESS_E expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! GREATER_E       [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! LESS_E          [ shift and go to state 55 ]


state 83

    (34) expression -> expression AND expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 34 (expression -> expression AND expression .)
    PLUS            reduce using rule 34 (expression -> expression AND expression .)
    MINUS           reduce using rule 34 (expression -> expression AND expression .)
    BY              reduce using rule 34 (expression -> expression AND expression .)
    DIVISION        reduce using rule 34 (expression -> expression AND expression .)
    MODULO          reduce using rule 34 (expression -> expression AND expression .)
    EQEQUAL         reduce using rule 34 (expression -> expression AND expression .)
    DIF             reduce using rule 34 (expression -> expression AND expression .)
    GREATER         reduce using rule 34 (expression -> expression AND expression .)
    GREATER_E       reduce using rule 34 (expression -> expression AND expression .)
    LESS            reduce using rule 34 (expression -> expression AND expression .)
    LESS_E          reduce using rule 34 (expression -> expression AND expression .)
    AND             reduce using rule 34 (expression -> expression AND expression .)
    R_PAR           reduce using rule 34 (expression -> expression AND expression .)
    R_BRACKET       reduce using rule 34 (expression -> expression AND expression .)
    COMMA           reduce using rule 34 (expression -> expression AND expression .)
    OR              shift and go to state 57

  ! OR              [ reduce using rule 34 (expression -> expression AND expression .) ]
  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! GREATER_E       [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! LESS_E          [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]


state 84

    (35) expression -> expression OR expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       reduce using rule 35 (expression -> expression OR expression .)
    PLUS            reduce using rule 35 (expression -> expression OR expression .)
    MINUS           reduce using rule 35 (expression -> expression OR expression .)
    BY              reduce using rule 35 (expression -> expression OR expression .)
    DIVISION        reduce using rule 35 (expression -> expression OR expression .)
    MODULO          reduce using rule 35 (expression -> expression OR expression .)
    EQEQUAL         reduce using rule 35 (expression -> expression OR expression .)
    DIF             reduce using rule 35 (expression -> expression OR expression .)
    GREATER         reduce using rule 35 (expression -> expression OR expression .)
    GREATER_E       reduce using rule 35 (expression -> expression OR expression .)
    LESS            reduce using rule 35 (expression -> expression OR expression .)
    LESS_E          reduce using rule 35 (expression -> expression OR expression .)
    AND             reduce using rule 35 (expression -> expression OR expression .)
    OR              reduce using rule 35 (expression -> expression OR expression .)
    R_PAR           reduce using rule 35 (expression -> expression OR expression .)
    R_BRACKET       reduce using rule 35 (expression -> expression OR expression .)
    COMMA           reduce using rule 35 (expression -> expression OR expression .)

  ! PLUS            [ shift and go to state 45 ]
  ! MINUS           [ shift and go to state 46 ]
  ! BY              [ shift and go to state 47 ]
  ! DIVISION        [ shift and go to state 48 ]
  ! MODULO          [ shift and go to state 49 ]
  ! EQEQUAL         [ shift and go to state 50 ]
  ! DIF             [ shift and go to state 51 ]
  ! GREATER         [ shift and go to state 52 ]
  ! GREATER_E       [ shift and go to state 53 ]
  ! LESS            [ shift and go to state 54 ]
  ! LESS_E          [ shift and go to state 55 ]
  ! AND             [ shift and go to state 56 ]
  ! OR              [ shift and go to state 57 ]


state 85

    (37) expression -> L_PAR expression R_PAR .

    SEMICOLON       reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    PLUS            reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    MINUS           reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    BY              reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    DIVISION        reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    MODULO          reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    EQEQUAL         reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    DIF             reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    GREATER         reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    GREATER_E       reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    LESS            reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    LESS_E          reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    AND             reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    OR              reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    R_PAR           reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    R_BRACKET       reduce using rule 37 (expression -> L_PAR expression R_PAR .)
    COMMA           reduce using rule 37 (expression -> L_PAR expression R_PAR .)


state 86

    (45) listArray -> listArray L_BRACKET expression . R_BRACKET
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    R_BRACKET       shift and go to state 94
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 87

    (46) listArray -> listArray DOT ID .

    L_BRACKET       reduce using rule 46 (listArray -> listArray DOT ID .)
    DOT             reduce using rule 46 (listArray -> listArray DOT ID .)
    SEMICOLON       reduce using rule 46 (listArray -> listArray DOT ID .)
    PLUS            reduce using rule 46 (listArray -> listArray DOT ID .)
    MINUS           reduce using rule 46 (listArray -> listArray DOT ID .)
    BY              reduce using rule 46 (listArray -> listArray DOT ID .)
    DIVISION        reduce using rule 46 (listArray -> listArray DOT ID .)
    MODULO          reduce using rule 46 (listArray -> listArray DOT ID .)
    EQEQUAL         reduce using rule 46 (listArray -> listArray DOT ID .)
    DIF             reduce using rule 46 (listArray -> listArray DOT ID .)
    GREATER         reduce using rule 46 (listArray -> listArray DOT ID .)
    GREATER_E       reduce using rule 46 (listArray -> listArray DOT ID .)
    LESS            reduce using rule 46 (listArray -> listArray DOT ID .)
    LESS_E          reduce using rule 46 (listArray -> listArray DOT ID .)
    AND             reduce using rule 46 (listArray -> listArray DOT ID .)
    OR              reduce using rule 46 (listArray -> listArray DOT ID .)
    R_PAR           reduce using rule 46 (listArray -> listArray DOT ID .)
    R_BRACKET       reduce using rule 46 (listArray -> listArray DOT ID .)
    COMMA           reduce using rule 46 (listArray -> listArray DOT ID .)


state 88

    (44) expression -> L_BRACKET expressionList R_BRACKET .

    SEMICOLON       reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    PLUS            reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    MINUS           reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    BY              reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    DIVISION        reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    MODULO          reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    EQEQUAL         reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    DIF             reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    GREATER         reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    GREATER_E       reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    LESS            reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    LESS_E          reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    AND             reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    OR              reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    R_PAR           reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    R_BRACKET       reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)
    COMMA           reduce using rule 44 (expression -> L_BRACKET expressionList R_BRACKET .)


state 89

    (21) expressionList -> expressionList COMMA . expression
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 95
    listArray                      shift and go to state 30

state 90

    (11) declaration -> CONST ID COLON type EQUAL . expression SEMICOLON
    (23) expression -> . expression PLUS expression
    (24) expression -> . expression MINUS expression
    (25) expression -> . expression BY expression
    (26) expression -> . expression DIVISION expression
    (27) expression -> . expression MODULO expression
    (28) expression -> . expression EQEQUAL expression
    (29) expression -> . expression DIF expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression GREATER_E expression
    (32) expression -> . expression LESS expression
    (33) expression -> . expression LESS_E expression
    (34) expression -> . expression AND expression
    (35) expression -> . expression OR expression
    (36) expression -> . NEGATE expression
    (37) expression -> . L_PAR expression R_PAR
    (38) expression -> . NUMBER
    (39) expression -> . STRING
    (40) expression -> . FLOAT
    (41) expression -> . CHAR
    (42) expression -> . BOOLEAN
    (43) expression -> . listArray
    (44) expression -> . L_BRACKET expressionList R_BRACKET
    (45) listArray -> . listArray L_BRACKET expression R_BRACKET
    (46) listArray -> . listArray DOT ID
    (47) listArray -> . ID

    NEGATE          shift and go to state 23
    L_PAR           shift and go to state 24
    NUMBER          shift and go to state 25
    STRING          shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28
    BOOLEAN         shift and go to state 29
    L_BRACKET       shift and go to state 31
    ID              shift and go to state 21

    expression                     shift and go to state 96
    listArray                      shift and go to state 30

state 91

    (12) declaration -> CONST ID EQUAL expression SEMICOLON .

    CONSOLE         reduce using rule 12 (declaration -> CONST ID EQUAL expression SEMICOLON .)
    VAR             reduce using rule 12 (declaration -> CONST ID EQUAL expression SEMICOLON .)
    CONST           reduce using rule 12 (declaration -> CONST ID EQUAL expression SEMICOLON .)
    ID              reduce using rule 12 (declaration -> CONST ID EQUAL expression SEMICOLON .)
    $end            reduce using rule 12 (declaration -> CONST ID EQUAL expression SEMICOLON .)


state 92

    (7) print -> CONSOLE DOT LOG L_PAR expressionList R_PAR . SEMICOLON

    SEMICOLON       shift and go to state 97


state 93

    (8) declaration -> VAR ID COLON type EQUAL expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 98
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 94

    (45) listArray -> listArray L_BRACKET expression R_BRACKET .

    L_BRACKET       reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    DOT             reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    SEMICOLON       reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    PLUS            reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    MINUS           reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    BY              reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    DIVISION        reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    MODULO          reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    EQEQUAL         reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    DIF             reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    GREATER         reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    GREATER_E       reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    LESS            reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    LESS_E          reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    AND             reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    OR              reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    R_PAR           reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    R_BRACKET       reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)
    COMMA           reduce using rule 45 (listArray -> listArray L_BRACKET expression R_BRACKET .)


state 95

    (21) expressionList -> expressionList COMMA expression .
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    R_BRACKET       reduce using rule 21 (expressionList -> expressionList COMMA expression .)
    COMMA           reduce using rule 21 (expressionList -> expressionList COMMA expression .)
    R_PAR           reduce using rule 21 (expressionList -> expressionList COMMA expression .)
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 96

    (11) declaration -> CONST ID COLON type EQUAL expression . SEMICOLON
    (23) expression -> expression . PLUS expression
    (24) expression -> expression . MINUS expression
    (25) expression -> expression . BY expression
    (26) expression -> expression . DIVISION expression
    (27) expression -> expression . MODULO expression
    (28) expression -> expression . EQEQUAL expression
    (29) expression -> expression . DIF expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . GREATER_E expression
    (32) expression -> expression . LESS expression
    (33) expression -> expression . LESS_E expression
    (34) expression -> expression . AND expression
    (35) expression -> expression . OR expression

    SEMICOLON       shift and go to state 99
    PLUS            shift and go to state 45
    MINUS           shift and go to state 46
    BY              shift and go to state 47
    DIVISION        shift and go to state 48
    MODULO          shift and go to state 49
    EQEQUAL         shift and go to state 50
    DIF             shift and go to state 51
    GREATER         shift and go to state 52
    GREATER_E       shift and go to state 53
    LESS            shift and go to state 54
    LESS_E          shift and go to state 55
    AND             shift and go to state 56
    OR              shift and go to state 57


state 97

    (7) print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON .

    CONSOLE         reduce using rule 7 (print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON .)
    VAR             reduce using rule 7 (print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON .)
    CONST           reduce using rule 7 (print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON .)
    ID              reduce using rule 7 (print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON .)
    $end            reduce using rule 7 (print -> CONSOLE DOT LOG L_PAR expressionList R_PAR SEMICOLON .)


state 98

    (8) declaration -> VAR ID COLON type EQUAL expression SEMICOLON .

    CONSOLE         reduce using rule 8 (declaration -> VAR ID COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 8 (declaration -> VAR ID COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 8 (declaration -> VAR ID COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 8 (declaration -> VAR ID COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 8 (declaration -> VAR ID COLON type EQUAL expression SEMICOLON .)


state 99

    (11) declaration -> CONST ID COLON type EQUAL expression SEMICOLON .

    CONSOLE         reduce using rule 11 (declaration -> CONST ID COLON type EQUAL expression SEMICOLON .)
    VAR             reduce using rule 11 (declaration -> CONST ID COLON type EQUAL expression SEMICOLON .)
    CONST           reduce using rule 11 (declaration -> CONST ID COLON type EQUAL expression SEMICOLON .)
    ID              reduce using rule 11 (declaration -> CONST ID COLON type EQUAL expression SEMICOLON .)
    $end            reduce using rule 11 (declaration -> CONST ID COLON type EQUAL expression SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 58 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 58 resolved as shift
WARNING: shift/reduce conflict for BY in state 58 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 58 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 58 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 58 resolved as shift
WARNING: shift/reduce conflict for DIF in state 58 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 58 resolved as shift
WARNING: shift/reduce conflict for GREATER_E in state 58 resolved as shift
WARNING: shift/reduce conflict for LESS in state 58 resolved as shift
WARNING: shift/reduce conflict for LESS_E in state 58 resolved as shift
WARNING: shift/reduce conflict for AND in state 58 resolved as shift
WARNING: shift/reduce conflict for OR in state 58 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 76 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 76 resolved as shift
WARNING: shift/reduce conflict for BY in state 76 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 76 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 76 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 76 resolved as shift
WARNING: shift/reduce conflict for DIF in state 76 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 76 resolved as shift
WARNING: shift/reduce conflict for GREATER_E in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS in state 76 resolved as shift
WARNING: shift/reduce conflict for LESS_E in state 76 resolved as shift
WARNING: shift/reduce conflict for AND in state 76 resolved as shift
WARNING: shift/reduce conflict for OR in state 76 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for BY in state 77 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 77 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 77 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 77 resolved as shift
WARNING: shift/reduce conflict for DIF in state 77 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 77 resolved as shift
WARNING: shift/reduce conflict for GREATER_E in state 77 resolved as shift
WARNING: shift/reduce conflict for LESS in state 77 resolved as shift
WARNING: shift/reduce conflict for LESS_E in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for BY in state 78 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 78 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 78 resolved as shift
WARNING: shift/reduce conflict for EQEQUAL in state 78 resolved as shift
WARNING: shift/reduce conflict for DIF in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER in state 78 resolved as shift
WARNING: shift/reduce conflict for GREATER_E in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS in state 78 resolved as shift
WARNING: shift/reduce conflict for LESS_E in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
